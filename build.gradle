import org.gradle.internal.os.OperatingSystem

plugins {
	id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'java'
    id 'application'
}

def mainClass = 'app.BasicRedWindow'

application {
    mainClassName = mainClass
}

task(runBasicRedWindow, dependsOn: 'classes', type: JavaExec) {
   main = 'app.BasicRedWindow'
   classpath = sourceSets.main.runtimeClasspath
}

task makeJar(type: Jar) {
	manifest {
		attributes 'Main-Class': mainClass
		attributes 'Description': 'This is an application JAR'
	}
}

shadowJar {
  manifest {
    inheritFrom project.tasks.makeJar.manifest
  }
}

project.ext.lwjglVersion = "3.2.3"
switch (OperatingSystem.current()) {
	case OperatingSystem.LINUX:
		project.ext.lwjglNatives = "natives-linux"
		break
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = "natives-windows"
		break
}
project.ext.jomlVersion = "1.9.25"

repositories {
    jcenter()
	mavenCentral()
	maven {
    	url "https://oss.sonatype.org/content/repositories/snapshots/"
	}
}

dependencies {
    implementation 'com.google.guava:guava:29.0-jre'
    testImplementation 'junit:junit:4.13'

	implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
	implementation "org.lwjgl:lwjgl"
	implementation "org.lwjgl:lwjgl-assimp"
	implementation "org.lwjgl:lwjgl-glfw"
	implementation "org.lwjgl:lwjgl-openal"
	implementation "org.lwjgl:lwjgl-opengl"
	implementation "org.lwjgl:lwjgl-stb"
	runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"

	compile "org.joml:joml:${jomlVersion}"
}


